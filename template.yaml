AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  rustmonkey-api
  
  Example Rust Lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
#Globals:
#  Function:
#    Timeout: 20

Parameters:
  DynamoDbSwitch:
    Type: String
    Description: Switch between global (real) and local (development) DynamoDB.
    AllowedValues:
      - 'GLOBAL'
      - 'LOCAL'
    Default: 'GLOBAL'
  LocalDynamoDbEndpoint:
    Type: String
    Description: The DynamoDB endpoint URL used if DynamoDbSwitch is LOCAL.
    Default: ''
  RegionName:
    Type: String
    Description: Default region for deployment.
    Default: 'eu-west-2'
  RustBacktrace:
    Type: Number
    Description: Enable or disable backtraces for errors.
    AllowedValues:
      - 0
      - 1
    Default: 0

Resources:
  RustMonkeyFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Runtime: provided
      MemorySize: 128
      Timeout: 15
      CodeUri: lambda
      Handler: handler # Ignored but required by sam validate
      Architectures:
        - x86_64
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
     # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-api.html
      Events:
        CreateAccount:
          Type: Api
          Properties:
            Path: /account
            Method: post
        GetAccount:
          Type: Api
          Properties:
            Path: /account/{accountId}
            Method: get
        AdjustBalance:
          Type: Api
          Properties:
            Path: /account/{accountId}/balance
            Method: post
      Environment:
        Variables:
          DYNAMODB_SWITCH: !Ref DynamoDbSwitch
          LOCAL_DYNAMODB_ENDPOINT: !Ref LocalDynamoDbEndpoint
          REGION: !Ref RegionName
          RUST_BACKTRACE: !Ref RustBacktrace

      Policies:
        -  DynamoDBCrudPolicy:
             TableName: !Ref AccountTable

  AccountTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: accountId
        Type: String
      TableName: Accounts

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RustMonkeyApi:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  RustMonkeyFunction:
    Description: "Rust Monkey input function ARN"
    Value: !GetAtt RustMonkeyFunction.Arn
  #RustMonkeyFunctionIamRole:
  #  Description: "Implicit IAM Role created for Rust Monkey function"
  #  Value: !GetAtt RustMonkeyFunctionRole.Arn
